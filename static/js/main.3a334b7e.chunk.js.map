{"version":3,"sources":["component/card/Card.component.jsx","component/card-list/card-list.component.jsx","component/search-box/Search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","handler","type","placeholder","onChange","App","state","term","e","this","setState","target","value","fetch","then","response","json","data","catch","err","console","log","filterdMonsters","filter","toLowerCase","includes","termChange","bind","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uUAgBeA,EAbF,SAACC,GACZ,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BACHC,IAAI,YAEN,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCGTC,EAVE,SAACR,GAChB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACP,GACnB,OAAO,cAAC,EAAD,CAAMA,QAASA,GAAcA,EAAQG,YCMrCK,G,MAXG,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACnB,OACE,uBACEX,UAAU,SACVY,KAAK,SACLC,YAAY,mBACZC,SAAUH,MCuCDI,E,kDA1Cb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXR,SAAU,GACVS,KAAM,IALI,E,8CAWd,SAAWC,GACTC,KAAKC,SAAS,CAAEH,KAAMC,EAAEG,OAAOC,U,+BAEjC,WAAqB,IAAD,OAClBC,MAAM,6CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAU,EAAKP,SAAS,CAAEZ,SAAUmB,OACzCC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,EAAK,c,oBAGrC,WAAU,IAAD,EACoBV,KAAKH,MAAxBR,EADD,EACCA,SAAUS,EADX,EACWA,KAEZe,EAAkBxB,EAASyB,QAAO,SAAC/B,GAAD,OACtCA,EAAQG,KAAK6B,cAAcC,SAASlB,EAAKiB,kBAE3C,OACE,sBAAKlC,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEY,KAAK,SACLC,YAAY,mBAEZF,QAASQ,KAAKiB,WAAWC,KAAKlB,QAEhC,cAAC,EAAD,CAAUX,SAAUwB,W,GArCVM,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3a334b7e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card.styles.css\";\n\nconst Card = (props) => {\n  return (\n    <div className=\"card-container\">\n      <img\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\n        alt=\"monster\"\n      />\n      <h2>{props.monster.name}</h2>\n      <p>{props.monster.email}</p>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport \"./card-list.styles.css\";\nimport Card from \"../card/Card.component\";\n\nconst CardList = (props) => {\n  return (\n    <div className=\"card-list\">\n      {props.monsters.map((monster) => {\n        return <Card monster={monster} key={monster.name} />;\n      })}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from \"react\";\nimport \"./search-box.styles.css\";\n\nconst SearchBox = ({ handler }) => {\n  return (\n    <input\n      className=\"search\"\n      type=\"search\"\n      placeholder=\"search monsterss\"\n      onChange={handler}\n    />\n  );\n};\n\nexport default SearchBox;\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport CardList from \"./component/card-list/card-list.component\";\nimport SearchBox from \"./component/search-box/Search-box.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      term: \"\",\n    };\n  }\n  // termChange(term) {\n  //   this.setState({ term: term });\n  // }\n  termChange(e) {\n    this.setState({ term: e.target.value });\n  }\n  componentDidMount() {\n    fetch(\"http://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((data) => this.setState({ monsters: data }))\n      .catch((err) => console.log(err, \"error\"));\n  }\n\n  render() {\n    const { monsters, term } = this.state;\n\n    const filterdMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(term.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <SearchBox\n          type=\"search\"\n          placeholder=\"search monsterss\"\n          // handler={(e) => this.termChange(e.target.value)}\n          handler={this.termChange.bind(this)}\n        />\n        <CardList monsters={filterdMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}